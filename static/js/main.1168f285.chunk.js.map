{"version":3,"sources":["components/Header/index.style.js","components/Header/index.js","components/MovieList/index.style.js","components/MovieList/MovieCard.js","components/MovieList/FocusedMovie.js","components/MovieList/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["HeaderStyle","styled","div","Header","Typography","gutterBottom","variant","component","MovieWrapper","ButtonWrapper","button","FocusedWrapper","MovieCard","poster","title","overview","submitter","Grid","container","item","xs","sm","Card","CardMedia","alt","width","image","CardContent","gutterButtom","color","FocusedMovie","contributor","showtimeTime","moment","utc","localDate","local","duration","subtract","Paper","elevation","spacing","format","humanize","MovieList","useState","movies","movieList","setMovieList","submitterFilter","setSubmitterFilter","seenFilter","setSeenFilter","uniqueSubmitters","map","m","filter","s","idx","indexOf","focusedMovie","queue","useEffect","watched","handleSubmitterFilter","e","target","value","alignItems","length","onClick","toString","justify","direction","FooterStyle","Footer","role","aria-label","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1168f285.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const HeaderStyle = styled.div`\r\n  margin: auto;\r\n  width: 50%;\r\n  padding: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { HeaderStyle } from \"./index.style\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <HeaderStyle>\r\n      <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n        Heyo Dishcord!\r\n      </Typography>\r\n      <Typography gutterBottom variant=\"body\" component=\"p\">\r\n        Every week (ish), we try to coordinate movie nights where we all gather\r\n        together virtually to watch a movie in the Discord. Below are all the\r\n        movies on the list.\r\n      </Typography>\r\n    </HeaderStyle>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MovieWrapper = styled.div`\r\n  margin: auto;\r\n  width: 80%;\r\n  padding: 10px;\r\n\r\n  h2 span {\r\n    background-color: #fdd0f1;\r\n    border-radius: 4px;\r\n    padding: 0.1em 0.2em;\r\n    color: #72bbb4;\r\n  }\r\n  h1 span {\r\n    background-color: #fdd0f1;\r\n    border-radius: 8px;\r\n    padding: 0.1em 0.2em;\r\n    color: #72bbb4;\r\n  }\r\n`;\r\nexport const ButtonWrapper = styled.button`\r\n  background-color: #ffffff;\r\n  border-radius: 4px;\r\n  border: 1px;\r\n  font-size: 20px;\r\n  font-style: italic;\r\n  margin: 0.5em 0.25em;\r\n  padding: 0.25em 1em;\r\n  &:active,\r\n  &:visited {\r\n    border: 0;\r\n    background-color: #fdd0f1;\r\n  }\r\n`;\r\n\r\nexport const FocusedWrapper = styled.div`\r\n  margin-bottom: 60px;\r\n  p {\r\n    padding: 0.5em;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { CardMedia } from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const MovieCard = ({ poster, title, overview, submitter }) => {\r\n  return (\r\n    <Grid container item xs={12} sm={4}>\r\n      <Card>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={title}\r\n          width={200}\r\n          image={poster}\r\n          title={title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterButtom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {overview}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  poster: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  overview: PropTypes.string.isRequired,\r\n  contributor: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport moment from \"moment-timezone\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Paper, CardMedia, Typography } from \"@material-ui/core\";\r\nimport { FocusedWrapper } from \"./index.style\";\r\n\r\nexport const FocusedMovie = ({ poster, title, overview, contributor }) => {\r\n  var dateFormat = \"MMMM Do YYYY, h:mm a\";\r\n  var showtimeTime = moment.utc(\"2020-09-12 2:00:00\");\r\n  var localDate = showtimeTime.local();\r\n  var duration = moment.duration(showtimeTime).subtract(moment());\r\n  return (\r\n    <FocusedWrapper>\r\n      <Paper elevation={3}>\r\n        <h1>\r\n          <span>Up Next</span>\r\n        </h1>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={3}>\r\n            <CardMedia component=\"img\" image={poster} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={9}>\r\n            <p>\r\n              <Typography gutterBottom variant=\"body\" component=\"h1\">\r\n                {title}\r\n              </Typography>\r\n              <Typography gutterBottom variant=\"body\" component=\"h3\">\r\n                Showtime: {localDate.format(dateFormat)} (that's in{\" \"}\r\n                {duration.humanize()}\r\n                !)\r\n              </Typography>\r\n              <Typography gutterBottom variant=\"body\" component=\"h4\">\r\n                Submitted By: {contributor}\r\n              </Typography>\r\n              <Typography gutterBottom variant=\"body\" component=\"p\">\r\n                {overview}\r\n              </Typography>\r\n            </p>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </FocusedWrapper>\r\n  );\r\n};\r\n\r\nFocusedMovie.propTypes = {\r\n  poster: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  overview: PropTypes.string.isRequired,\r\n  contributor: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FocusedMovie;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MovieWrapper, ButtonWrapper } from \"./index.style\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport movies from \"./movies\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport FocusedMovie from \"./FocusedMovie\";\r\n\r\nconst MovieList = () => {\r\n  // Hooks\r\n  const [movieList, setMovieList] = useState(movies);\r\n  const [submitterFilter, setSubmitterFilter] = useState(null);\r\n  const [seenFilter, setSeenFilter] = useState(null);\r\n  const uniqueSubmitters = movies\r\n    .map((m) => m.submitter)\r\n    .filter((s, idx) => movies.map((m) => m.submitter).indexOf(s) === idx);\r\n  const focusedMovie = movies.filter((m) => m.queue);\r\n\r\n  // useEffect pog\r\n  useEffect(() => {\r\n    if (seenFilter != null && submitterFilter != null) {\r\n      setMovieList(\r\n        movies.filter(\r\n          (m) =>\r\n            (seenFilter ? m.watched : !m.watched) &&\r\n            m.submitter === submitterFilter\r\n        )\r\n      );\r\n    } else {\r\n      if (seenFilter != null) {\r\n        setMovieList(\r\n          movies.filter((m) => (seenFilter ? m.watched : !m.watched))\r\n        );\r\n      } else if (submitterFilter != null) {\r\n        setMovieList(movies.filter((m) => m.submitter === submitterFilter));\r\n      }\r\n    }\r\n  }, [submitterFilter, seenFilter]);\r\n\r\n  // Handlers\r\n  const handleUnseenFilter = () => {\r\n    setSeenFilter(false);\r\n  };\r\n  const handleWatchedFilter = () => {\r\n    setSeenFilter(true);\r\n  };\r\n  const handleClearFilters = () => {\r\n    setSeenFilter(null);\r\n    setSubmitterFilter(null);\r\n    setMovieList(movies);\r\n  };\r\n  const handleSubmitterFilter = (e) => {\r\n    setSubmitterFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <MovieWrapper>\r\n      <Grid container spacing={3} alignItems=\"center\">\r\n        <Grid item xs={12} sm={6}>\r\n          <center>\r\n            <h2>\r\n              <span>Seen</span>\r\n            </h2>\r\n            <h1>{movies.filter((m) => m.watched).length}</h1>\r\n          </center>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <center>\r\n            <h2>\r\n              <span>Unseen</span>\r\n            </h2>\r\n            <h1>{movies.filter((m) => !m.watched).length}</h1>\r\n          </center>\r\n        </Grid>\r\n      </Grid>\r\n      {focusedMovie && (\r\n        <FocusedMovie\r\n          title={focusedMovie[0].title}\r\n          contributor={focusedMovie[0].submitter}\r\n          overview={focusedMovie[0].overview}\r\n          poster={focusedMovie[0].poster}\r\n        />\r\n      )}\r\n      <div>\r\n        <h2>\r\n          <span>Filter by Seen</span>\r\n        </h2>\r\n        <ButtonWrapper onClick={handleClearFilters}>All</ButtonWrapper>\r\n        <ButtonWrapper onClick={handleWatchedFilter}>Seen</ButtonWrapper>\r\n        <ButtonWrapper onClick={handleUnseenFilter}>Unseen</ButtonWrapper>\r\n      </div>\r\n      <div>\r\n        <h2>\r\n          <span>Filter By Contributor</span>\r\n        </h2>\r\n        {uniqueSubmitters.map((m) => (\r\n          <ButtonWrapper onClick={handleSubmitterFilter} value={m}>\r\n            {m}\r\n          </ButtonWrapper>\r\n        ))}\r\n      </div>\r\n      {seenFilter !== submitterFilter && (\r\n        <h4>\r\n          {seenFilter !== null && <span>Seen: {seenFilter.toString()}</span>}{\" \"}\r\n          {submitterFilter !== null && (\r\n            <span>Submitter: {submitterFilter}</span>\r\n          )}\r\n        </h4>\r\n      )}\r\n      {movieList.length === 0 && (\r\n        <p>No movies found with the chosen filters.</p>\r\n      )}\r\n      <br />\r\n      <br />\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        direction=\"row\"\r\n        alignItems=\"flex-start\"\r\n        spacing={2}\r\n      >\r\n        {movieList.map((m) => (\r\n          <MovieCard\r\n            title={m.title}\r\n            poster={m.poster}\r\n            overview={m.overview}\r\n            contributor={m.submitter}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </MovieWrapper>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FooterStyle = styled.div`\r\n  padding: 1em;\r\n  text-align: center;\r\n`;\r\nexport const Footer = () => {\r\n  return (\r\n    <FooterStyle>\r\n      {\" \"}\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          Made with{\" \"}\r\n          <span role=\"img\" aria-label=\"heart\">\r\n            ❤️\r\n          </span>{\" \"}\r\n          using React. By <a href=\"https://codejulen.github.io\">Julian</a> for{\" \"}\r\n          <a href=\"https://twitch.tv/imdishrag\">Dish</a> and her wonderful\r\n          community.\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <a href=\"https://github.com/codejulen/dish/blob/master/CHANGELOG.md\">\r\n            Changelog\r\n          </a>\r\n        </Grid>\r\n      </Grid>\r\n    </FooterStyle>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport MovieList from \"./components/MovieList\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <MovieList />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}